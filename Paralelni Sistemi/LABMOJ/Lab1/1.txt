#include <iostream>
#include "mpi.h"
#include <stdlib.h>
#include <stdio.h>
#include <math.h>
using namespace std;

#define n 32

bool Paran(int* niz)
{
    int suma = 0;
    for (int i = 0; i < 31; i++)
    {
        suma += niz[i];
    }

    return (suma % 2) == 0;
}

int main(int argc, char* argv[])
{
    int rank, size;
    MPI_Init(&argc, &argv);
    
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);
    MPI_Comm_size(MPI_COMM_WORLD, &size);

    MPI_Status stat;
    if (size > n) exit(-1);

    int buffer[31];
    int bitovi[n]{ 0 };

    srand(NULL);

    for (int i = 0; i < 31; i++)
    {
        buffer[i] = rank;
    }

  



    if (rank == size - 1)
    {
        if (Paran(buffer))
        {
            bitovi[size - 1] = 1;
        }
        MPI_Send(bitovi, n, MPI_INT, rank - 1, 69, MPI_COMM_WORLD);
    }
    else
    {
        MPI_Recv(bitovi, n, MPI_INT, rank + 1, 69, MPI_COMM_WORLD, &stat);

        if (Paran(buffer))
        {
            bitovi[rank] = 1;
            cout << "ja sam proces " << rank << " i paran sam jebiga " << endl;
            fflush(stdout);
        }

        if(rank)
            MPI_Send(bitovi, n, MPI_INT, rank - 1, 69, MPI_COMM_WORLD);
    }


    if (!rank)
    {
        for (int i = size - 1; i >= 0; i--)
        {
            cout << "Proces: " << i << " je ";
            if (bitovi[i] == 1)
            {
                cout << "paran" << endl;
            }
            else
            {
                cout << "neparan" << endl;
            }
        }
    }




    MPI_Finalize();
    return 0;
}